{"version":3,"sources":["atoms.tsx","localStorage.ts","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","key","categoryState","atom","default","TO_DO","toDoState","effects","setSelf","onSet","savedToDos","localStorage","getItem","JSON","parse","newToDos","_","isReset","removeItem","setItem","stringify","toDoSelector","selector","get","toDos","category","filter","toDo","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","useForm","register","handleSubmit","setValue","console","log","onSubmit","oldToDos","text","id","Date","now","required","placeholder","ToDo","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","DOING","DONE","prevToDos","ToDoList","useRecoilState","setCategory","value","onInput","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.4094a3e2.chunk.js","sourcesContent":["import { get } from \"http\";\nimport { atom, selector } from \"recoil\";\nimport { localStorageEffect } from \"./localStorage\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n  \"DELETE\" = \"DELETE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n  effects: [localStorageEffect(\"toDos\")],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { IToDo } from \"./atoms\";\n\nexport const localStorageEffect =\n  (key: string) =>\n  ({ setSelf, onSet }: any) => {\n    const savedToDos = localStorage.getItem(key);\n    if (savedToDos != null) {\n      setSelf(JSON.parse(savedToDos));\n    }\n    onSet((newToDos: IToDo[], _: any, isReset: boolean) => {\n      isReset\n        ? localStorage.removeItem(key)\n        : localStorage.setItem(key, JSON.stringify(newToDos));\n    });\n  };\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\n// function CreateToDo() {\n// const [ToDos, setToDos] = useRecoilState(toDoState);\n// const category = useRecoilValue(categoryState);\n// const { register, handleSubmit, setValue } = useForm<IForm>();\n// const onSubmit = (data: IForm) => {\n//   setToDos((oldtodos) => {\n//     const updateItem = [\n//       { text: data.toDo, id: Date.now(), category },\n//       ...oldtodos,\n//     ];\n//     window.localStorage.setItem(\"todo\", JSON.stringify(updateItem));\n//     return updateItem;\n//   });\n//   //2 window.localStorage.setItem('todo',JSON.stringify(ToDos))\n//   setValue(\"toDo\", \"\");\n// };\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  console.log(setToDos);\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\nexport default CreateToDo;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { json } from \"stream/consumers\";\nimport { Categories, IToDo, toDoSelector, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const deleteTodo = () => {\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  const handleDelete = () => {\n    setToDos((prevToDos) => {\n      const targetIndex = prevToDos.findIndex((toDo) => toDo.id === id);\n      return [\n        ...prevToDos.slice(0, targetIndex),\n        ...prevToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onClick}>\n          Done\n        </button>\n      )}\n      <button onClick={handleDelete}>Delete</button>\n    </li>\n  );\n}\n\nexport default ToDo;\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Categories, categoryState, toDoSelector, toDoState } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <hr />\n      <select value={category} onInput={onInput}>\n        <option value={Categories.TO_DO}>To Do</option>\n        <option value={Categories.DOING}>Doing</option>\n        <option value={Categories.DONE}>Done</option>\n      </select>\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nfont-family: 'Source Sans Pro', sans-serif;\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n"],"sourceRoot":""}